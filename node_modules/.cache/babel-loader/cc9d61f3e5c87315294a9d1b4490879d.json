{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nfunction UserAPi(token) {\n  _s();\n\n  const [isLogged, setIsLogged] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [cart, setCart] = useState([]);\n  useEffect(() => {\n    if (token) {\n      const getUser = async () => {\n        try {\n          const res = await axios.get(\"/user/info\", {\n            headers: {\n              Authorization: token\n            }\n          });\n          setIsLogged(true);\n          res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false);\n          console.log(res);\n        } catch (err) {\n          alert(err.response.data.msg);\n        }\n      };\n\n      getUser();\n    }\n  }, [token]);\n\n  const addCart = async product => {\n    if (!isLogged) {\n      alert(\"Please login to buy..\");\n    }\n\n    const check = cart.every(item => {\n      return item._id !== product._id;\n    });\n\n    if (check) {\n      setCart([...cart, { ...product,\n        quantity: 1\n      }]);\n    } else {\n      alert(\"Product Added\");\n    }\n  };\n\n  return {\n    isLogged: [isLogged, setIsLogged],\n    isAdmin: [isAdmin, setIsAdmin],\n    addCart: [addCart]\n  };\n}\n\n_s(UserAPi, \"bRWEenHGuj23AV38AmLORPHuZ9g=\");\n\n_c = UserAPi;\nexport default UserAPi;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserAPi\");","map":{"version":3,"sources":["/home/zeeshanhshaheen/Desktop/Ecommer Store /ECommerceStore/client/src/api/User.js"],"names":["useEffect","useState","axios","UserAPi","token","isLogged","setIsLogged","isAdmin","setIsAdmin","cart","setCart","getUser","res","get","headers","Authorization","data","role","console","log","err","alert","response","msg","addCart","product","check","every","item","_id","quantity"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACtB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAII,KAAJ,EAAW;AACT,YAAMO,OAAO,GAAG,YAAY;AAC1B,YAAI;AACF,gBAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAU,YAAV,EAAwB;AACxCC,YAAAA,OAAO,EAAE;AAAEC,cAAAA,aAAa,EAAEX;AAAjB;AAD+B,WAAxB,CAAlB;AAIAE,UAAAA,WAAW,CAAC,IAAD,CAAX;AACAM,UAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,KAAkB,CAAlB,GAAsBT,UAAU,CAAC,IAAD,CAAhC,GAAyCA,UAAU,CAAC,KAAD,CAAnD;AACAU,UAAAA,OAAO,CAACC,GAAR,CAAYP,GAAZ;AACD,SARD,CAQE,OAAOQ,GAAP,EAAY;AACZC,UAAAA,KAAK,CAACD,GAAG,CAACE,QAAJ,CAAaN,IAAb,CAAkBO,GAAnB,CAAL;AACD;AACF,OAZD;;AAcAZ,MAAAA,OAAO;AACR;AACF,GAlBQ,EAkBN,CAACP,KAAD,CAlBM,CAAT;;AAoBA,QAAMoB,OAAO,GAAG,MAAOC,OAAP,IAAmB;AACjC,QAAI,CAACpB,QAAL,EAAe;AACbgB,MAAAA,KAAK,CAAC,uBAAD,CAAL;AACD;;AACD,UAAMK,KAAK,GAAGjB,IAAI,CAACkB,KAAL,CAAYC,IAAD,IAAU;AACjC,aAAOA,IAAI,CAACC,GAAL,KAAaJ,OAAO,CAACI,GAA5B;AACD,KAFa,CAAd;;AAGA,QAAIH,KAAJ,EAAW;AACThB,MAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAU,EAAE,GAAGgB,OAAL;AAAcK,QAAAA,QAAQ,EAAE;AAAxB,OAAV,CAAD,CAAP;AACD,KAFD,MAEO;AACLT,MAAAA,KAAK,CAAC,eAAD,CAAL;AACD;AACF,GAZD;;AAaA,SAAO;AACLhB,IAAAA,QAAQ,EAAE,CAACA,QAAD,EAAWC,WAAX,CADL;AAELC,IAAAA,OAAO,EAAE,CAACA,OAAD,EAAUC,UAAV,CAFJ;AAGLgB,IAAAA,OAAO,EAAE,CAACA,OAAD;AAHJ,GAAP;AAKD;;GA3CQrB,O;;KAAAA,O;AA6CT,eAAeA,OAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nfunction UserAPi(token) {\n  const [isLogged, setIsLogged] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [cart, setCart] = useState([]);\n\n  useEffect(() => {\n    if (token) {\n      const getUser = async () => {\n        try {\n          const res = await axios.get(\"/user/info\", {\n            headers: { Authorization: token },\n          });\n\n          setIsLogged(true);\n          res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false);\n          console.log(res);\n        } catch (err) {\n          alert(err.response.data.msg);\n        }\n      };\n\n      getUser();\n    }\n  }, [token]);\n\n  const addCart = async (product) => {\n    if (!isLogged) {\n      alert(\"Please login to buy..\");\n    }\n    const check = cart.every((item) => {\n      return item._id !== product._id;\n    });\n    if (check) {\n      setCart([...cart, { ...product, quantity: 1 }]);\n    } else {\n      alert(\"Product Added\");\n    }\n  };\n  return {\n    isLogged: [isLogged, setIsLogged],\n    isAdmin: [isAdmin, setIsAdmin],\n    addCart: [addCart],\n  };\n}\n\nexport default UserAPi;\n"]},"metadata":{},"sourceType":"module"}